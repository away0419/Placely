-- ============================================================================
-- Placely 프로젝트 Oracle DB 전체 테이블 생성 스크립트 (통합 버전)
-- ============================================================================

-- @@문법이 안될 경우 이 파일을 실행하세요
-- Oracle SQL*Plus, SQL Developer, Toad 등에서 실행 가능합니다

-- ============================================================================
-- Auth 서비스 테이블 (인증/인가 관리)
-- ============================================================================

-- 사용자 테이블
CREATE TABLE AUTH_USERS (
    USER_ID         NUMBER          PRIMARY KEY,
    USERNAME        VARCHAR2(50)    UNIQUE NOT NULL,
    EMAIL           VARCHAR2(100)   UNIQUE NOT NULL,
    PASSWORD_HASH   VARCHAR2(255)   NOT NULL,
    PHONE           VARCHAR2(20),
    FULL_NAME       VARCHAR2(100)   NOT NULL,
    BIRTH_DATE      DATE,
    GENDER          CHAR(1)         CHECK (GENDER IN ('M', 'F')),
    STATUS          VARCHAR2(20)    DEFAULT 'ACTIVE' CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'SUSPENDED')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    LAST_LOGIN_AT   TIMESTAMP
);

-- 역할 테이블
CREATE TABLE AUTH_ROLES (
    ROLE_ID         NUMBER          PRIMARY KEY,
    ROLE_NAME       VARCHAR2(50)    UNIQUE NOT NULL,
    DESCRIPTION     VARCHAR2(200),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 사용자-역할 매핑 테이블
CREATE TABLE AUTH_USER_ROLES (
    USER_ID         NUMBER          NOT NULL,
    ROLE_ID         NUMBER          NOT NULL,
    GRANTED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    GRANTED_BY      NUMBER,
    PRIMARY KEY (USER_ID, ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES AUTH_USERS(USER_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES AUTH_ROLES(ROLE_ID),
    FOREIGN KEY (GRANTED_BY) REFERENCES AUTH_USERS(USER_ID)
);

-- 권한 테이블
CREATE TABLE AUTH_PERMISSIONS (
    PERMISSION_ID   NUMBER          PRIMARY KEY,
    PERMISSION_NAME VARCHAR2(100)   UNIQUE NOT NULL,
    RESOURCE_TYPE   VARCHAR2(100)   NOT NULL,
    ACTION_TYPE     VARCHAR2(50)    NOT NULL,
    DESCRIPTION     VARCHAR2(200),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 역할-권한 매핑 테이블
CREATE TABLE AUTH_ROLE_PERMISSIONS (
    ROLE_ID         NUMBER          NOT NULL,
    PERMISSION_ID   NUMBER          NOT NULL,
    GRANTED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ROLE_ID, PERMISSION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES AUTH_ROLES(ROLE_ID),
    FOREIGN KEY (PERMISSION_ID) REFERENCES AUTH_PERMISSIONS(PERMISSION_ID)
);

-- 로그인 토큰 테이블 (JWT 토큰 관리)
CREATE TABLE AUTH_TOKENS (
    TOKEN_ID        NUMBER          PRIMARY KEY,
    USER_ID         NUMBER          NOT NULL,
    TOKEN_TYPE      VARCHAR2(20)    DEFAULT 'ACCESS' CHECK (TOKEN_TYPE IN ('ACCESS', 'REFRESH')),
    TOKEN_HASH      VARCHAR2(255)   NOT NULL,
    EXPIRES_AT      TIMESTAMP       NOT NULL,
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    REVOKED_AT      TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES AUTH_USERS(USER_ID)
);

-- ============================================================================
-- POS 서비스 테이블 (매장 운영 핵심 비즈니스)
-- ============================================================================

-- 점주 테이블
CREATE TABLE POS_OWNERS (
    OWNER_ID        NUMBER          PRIMARY KEY,
    EMAIL           VARCHAR2(100)   UNIQUE NOT NULL,
    PASSWORD_HASH   VARCHAR2(255)   NOT NULL,
    OWNER_NAME      VARCHAR2(100)   NOT NULL,
    PHONE           VARCHAR2(20),
    STATUS          VARCHAR2(20)    DEFAULT 'ACTIVE' CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 매장 테이블
CREATE TABLE POS_STORES (
    STORE_ID        NUMBER          PRIMARY KEY,
    OWNER_ID        NUMBER          NOT NULL,
    STORE_NAME      VARCHAR2(100)   NOT NULL,
    STORE_CODE      VARCHAR2(20)    UNIQUE NOT NULL,
    ADDRESS         VARCHAR2(200),
    PHONE           VARCHAR2(20),
    BUSINESS_NUMBER VARCHAR2(20),
    OPEN_TIME       VARCHAR2(5),    -- HH:MM 형식
    CLOSE_TIME      VARCHAR2(5),    -- HH:MM 형식
    STATUS          VARCHAR2(20)    DEFAULT 'ACTIVE' CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'MAINTENANCE')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OWNER_ID) REFERENCES POS_OWNERS(OWNER_ID)
);

-- 카테고리 테이블
CREATE TABLE POS_CATEGORIES (
    CATEGORY_ID     NUMBER          PRIMARY KEY,
    CATEGORY_NAME   VARCHAR2(100)   NOT NULL,
    PARENT_ID       NUMBER,
    DISPLAY_ORDER   NUMBER          DEFAULT 0,
    STATUS          VARCHAR2(20)    DEFAULT 'ACTIVE' CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PARENT_ID) REFERENCES POS_CATEGORIES(CATEGORY_ID)
);

-- 옵션 그룹 테이블 (사이즈, 온도, 시럽 등)
CREATE TABLE POS_OPTION_GROUPS (
    OPTION_GROUP_ID NUMBER          PRIMARY KEY,
    GROUP_NAME      VARCHAR2(50)    NOT NULL,
    DESCRIPTION     VARCHAR2(200),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 옵션 항목 테이블 (S/M/L, 아이스/핫, 바닐라시럽 등)
CREATE TABLE POS_OPTION_ITEMS (
    OPTION_ITEM_ID  NUMBER          PRIMARY KEY,
    OPTION_GROUP_ID NUMBER          NOT NULL,
    ITEM_NAME       VARCHAR2(50)    NOT NULL,
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OPTION_GROUP_ID) REFERENCES POS_OPTION_GROUPS(OPTION_GROUP_ID)
);

-- 상품 테이블
CREATE TABLE POS_PRODUCTS (
    PRODUCT_ID      NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    PRODUCT_NAME    VARCHAR2(200)   NOT NULL,
    PRODUCT_CODE    VARCHAR2(50)    NOT NULL,
    BARCODE         VARCHAR2(50),
    CATEGORY_ID     NUMBER,
    BASE_PRICE      NUMBER(10,2)    NOT NULL CHECK (BASE_PRICE >= 0),
    COST_PRICE      NUMBER(10,2)    CHECK (COST_PRICE >= 0),
    TAX_RATE        NUMBER(5,2)     DEFAULT 10.0,
    DESCRIPTION     VARCHAR2(500),
    IMAGE_URL       VARCHAR2(300),
    IS_ACTIVE       CHAR(1)         DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (STORE_ID, PRODUCT_CODE),
    FOREIGN KEY (STORE_ID) REFERENCES POS_STORES(STORE_ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES POS_CATEGORIES(CATEGORY_ID)
);

-- 상품-옵션 연결 테이블 (상품별 사용 가능한 옵션과 추가 금액)
CREATE TABLE POS_PRODUCT_OPTIONS (
    PRODUCT_OPTION_ID NUMBER        PRIMARY KEY,
    PRODUCT_ID        NUMBER        NOT NULL,
    OPTION_ITEM_ID    NUMBER        NOT NULL,
    EXTRA_PRICE       NUMBER(10,2)  DEFAULT 0,
    CREATED_AT        TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (PRODUCT_ID, OPTION_ITEM_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES POS_PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (OPTION_ITEM_ID) REFERENCES POS_OPTION_ITEMS(OPTION_ITEM_ID)
);

-- 재고 테이블
CREATE TABLE POS_INVENTORY (
    INVENTORY_ID    NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    PRODUCT_ID      NUMBER          NOT NULL,
    CURRENT_STOCK   NUMBER          DEFAULT 0 CHECK (CURRENT_STOCK >= 0),
    MIN_STOCK       NUMBER          DEFAULT 0,
    MAX_STOCK       NUMBER,
    LAST_UPDATED    TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (STORE_ID, PRODUCT_ID),
    FOREIGN KEY (STORE_ID) REFERENCES POS_STORES(STORE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES POS_PRODUCTS(PRODUCT_ID)
);

-- 판매 테이블 (영수증 헤더)
CREATE TABLE POS_SALES (
    SALE_ID         NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    CASHIER_ID      NUMBER          NOT NULL,
    RECEIPT_NUMBER  VARCHAR2(50)    UNIQUE NOT NULL,
    TOTAL_AMOUNT    NUMBER(12,2)    NOT NULL CHECK (TOTAL_AMOUNT >= 0),
    TAX_AMOUNT      NUMBER(12,2)    DEFAULT 0,
    DISCOUNT_AMOUNT NUMBER(10,2)    DEFAULT 0,
    PAYMENT_METHOD  VARCHAR2(20)    CHECK (PAYMENT_METHOD IN ('CASH', 'CARD', 'QR', 'MIXED')),
    SALE_DATE       TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    STATUS          VARCHAR2(20)    DEFAULT 'COMPLETED' CHECK (STATUS IN ('COMPLETED', 'CANCELLED', 'REFUNDED')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (STORE_ID) REFERENCES POS_STORES(STORE_ID)
);

-- 판매 상세 테이블 (영수증 라인)
CREATE TABLE POS_SALE_ITEMS (
    SALE_ITEM_ID    NUMBER          PRIMARY KEY,
    SALE_ID         NUMBER          NOT NULL,
    PRODUCT_ID      NUMBER          NOT NULL,
    QUANTITY        NUMBER          NOT NULL CHECK (QUANTITY > 0),
    BASE_PRICE      NUMBER(10,2)    NOT NULL CHECK (BASE_PRICE >= 0),
    TOTAL_AMOUNT    NUMBER(12,2)    NOT NULL CHECK (TOTAL_AMOUNT >= 0),
    DISCOUNT_AMOUNT NUMBER(10,2)    DEFAULT 0,
    TAX_AMOUNT      NUMBER(10,2)    DEFAULT 0,
    FOREIGN KEY (SALE_ID) REFERENCES POS_SALES(SALE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES POS_PRODUCTS(PRODUCT_ID)
);

-- 판매 상세 옵션 테이블 (주문 시점의 옵션 기록)
CREATE TABLE POS_SALE_ITEM_OPTIONS (
    SALE_OPTION_ID    NUMBER        PRIMARY KEY,
    SALE_ITEM_ID      NUMBER        NOT NULL,
    PRODUCT_OPTION_ID NUMBER        NOT NULL,
    OPTION_NAME       VARCHAR2(50)  NOT NULL, -- 주문 시점 옵션명 보존
    OPTION_PRICE      NUMBER(10,2)  DEFAULT 0, -- 주문 시점 옵션 금액 보존
    FOREIGN KEY (SALE_ITEM_ID) REFERENCES POS_SALE_ITEMS(SALE_ITEM_ID),
    FOREIGN KEY (PRODUCT_OPTION_ID) REFERENCES POS_PRODUCT_OPTIONS(PRODUCT_OPTION_ID)
);

-- 결제 테이블
CREATE TABLE POS_PAYMENTS (
    PAYMENT_ID      NUMBER          PRIMARY KEY,
    SALE_ID         NUMBER          NOT NULL,
    PAYMENT_METHOD  VARCHAR2(20)    NOT NULL CHECK (PAYMENT_METHOD IN ('CASH', 'CARD', 'QR')),
    AMOUNT          NUMBER(12,2)    NOT NULL CHECK (AMOUNT > 0),
    CARD_NUMBER     VARCHAR2(20),   -- 마스킹된 카드번호
    APPROVAL_NUMBER VARCHAR2(50),
    PAYMENT_DATE    TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    STATUS          VARCHAR2(20)    DEFAULT 'COMPLETED' CHECK (STATUS IN ('COMPLETED', 'CANCELLED')),
    FOREIGN KEY (SALE_ID) REFERENCES POS_SALES(SALE_ID)
);

-- 재고 이동 이력 테이블
CREATE TABLE POS_INVENTORY_MOVEMENTS (
    MOVEMENT_ID     NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    PRODUCT_ID      NUMBER          NOT NULL,
    MOVEMENT_TYPE   VARCHAR2(20)    NOT NULL CHECK (MOVEMENT_TYPE IN ('IN', 'OUT', 'ADJUST')),
    QUANTITY        NUMBER          NOT NULL,
    REFERENCE_TYPE  VARCHAR2(20),   -- SALE, PURCHASE, ADJUSTMENT 등
    REFERENCE_ID    NUMBER,
    MOVEMENT_DATE   TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    NOTES           VARCHAR2(200),
    FOREIGN KEY (STORE_ID) REFERENCES POS_STORES(STORE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES POS_PRODUCTS(PRODUCT_ID)
);

-- ============================================================================
-- AI 서비스 테이블 (AI 기반 추천 및 분석)
-- ============================================================================

-- 고객 행동 분석 테이블
CREATE TABLE AI_CUSTOMER_BEHAVIOR (
    BEHAVIOR_ID     NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    SESSION_ID      VARCHAR2(100),
    CUSTOMER_TYPE   VARCHAR2(20)    CHECK (CUSTOMER_TYPE IN ('MEMBER', 'GUEST')),
    AGE_GROUP       VARCHAR2(20),   -- 10s, 20s, 30s, 40s, 50s, 60+
    GENDER          CHAR(1)         CHECK (GENDER IN ('M', 'F', 'U')),
    VISIT_TIME      TIMESTAMP       NOT NULL,
    VISIT_DURATION  NUMBER,         -- 분 단위
    TOTAL_AMOUNT    NUMBER(12,2),
    ITEMS_COUNT     NUMBER,
    BEHAVIOR_TYPE   VARCHAR2(50),   -- BROWSE, PURCHASE, RETURN 등
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 상품 추천 이력 테이블
CREATE TABLE AI_RECOMMENDATIONS (
    RECOMMENDATION_ID   NUMBER      PRIMARY KEY,
    STORE_ID           NUMBER       NOT NULL,
    PRODUCT_ID         NUMBER       NOT NULL,
    CUSTOMER_ID        NUMBER,      -- NULL이면 익명 고객
    RECOMMENDATION_TYPE VARCHAR2(30) CHECK (RECOMMENDATION_TYPE IN ('POPULAR', 'SIMILAR', 'CROSS_SELL', 'SEASONAL')),
    SCORE_VALUE        NUMBER(5,2),  -- 추천 점수 (0-100)
    ALGORITHM_VERSION  VARCHAR2(20),
    RECOMMENDED_AT     TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    CLICKED           CHAR(1)       DEFAULT 'N' CHECK (CLICKED IN ('Y', 'N')),
    PURCHASED         CHAR(1)       DEFAULT 'N' CHECK (PURCHASED IN ('Y', 'N')),
    CLICKED_AT        TIMESTAMP,
    PURCHASED_AT      TIMESTAMP
);

-- 판매 예측 데이터 테이블
CREATE TABLE AI_SALES_PREDICTIONS (
    PREDICTION_ID   NUMBER          PRIMARY KEY,
    STORE_ID        NUMBER          NOT NULL,
    PRODUCT_ID      NUMBER          NOT NULL,
    PREDICTION_DATE DATE            NOT NULL,
    PREDICTED_QUANTITY NUMBER(10,2),
    PREDICTED_AMOUNT   NUMBER(12,2),
    CONFIDENCE_LEVEL   NUMBER(5,2), -- 신뢰도 (0-100)
    MODEL_VERSION      VARCHAR2(20),
    FACTORS            CLOB,        -- JSON 형태의 예측 요인들
    ACTUAL_QUANTITY    NUMBER(10,2), -- 실제 판매량 (예측 후 업데이트)
    ACTUAL_AMOUNT      NUMBER(12,2), -- 실제 판매금액
    CREATED_AT         TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (STORE_ID, PRODUCT_ID, PREDICTION_DATE)
);

-- 고객 세그먼트 테이블
CREATE TABLE AI_CUSTOMER_SEGMENTS (
    SEGMENT_ID      NUMBER          PRIMARY KEY,
    SEGMENT_NAME    VARCHAR2(100)   NOT NULL,
    DESCRIPTION     VARCHAR2(500),
    CRITERIA        CLOB,           -- JSON 형태의 세그먼트 기준
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    IS_ACTIVE       CHAR(1)         DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N'))
);

-- 고객-세그먼트 매핑 테이블
CREATE TABLE AI_CUSTOMER_SEGMENT_MAPPING (
    MAPPING_ID      NUMBER          PRIMARY KEY,
    CUSTOMER_ID     NUMBER          NOT NULL,
    SEGMENT_ID      NUMBER          NOT NULL,
    ASSIGNED_AT     TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    CONFIDENCE      NUMBER(5,2),    -- 소속 확신도 (0-100)
    FOREIGN KEY (SEGMENT_ID) REFERENCES AI_CUSTOMER_SEGMENTS(SEGMENT_ID)
);

-- 상품 연관 분석 테이블 (장바구니 분석)
CREATE TABLE AI_PRODUCT_ASSOCIATIONS (
    ASSOCIATION_ID  NUMBER          PRIMARY KEY,
    PRODUCT_A_ID    NUMBER          NOT NULL,
    PRODUCT_B_ID    NUMBER          NOT NULL,
    SUPPORT         NUMBER(8,6),    -- 지지도
    CONFIDENCE      NUMBER(8,6),    -- 신뢰도
    LIFT           NUMBER(8,6),     -- 향상도
    ANALYSIS_DATE   DATE            NOT NULL,
    MIN_SUPPORT     NUMBER(8,6),
    MIN_CONFIDENCE  NUMBER(8,6),
    TRANSACTION_COUNT NUMBER,
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (PRODUCT_A_ID, PRODUCT_B_ID, ANALYSIS_DATE)
);

-- AI 모델 성능 추적 테이블
CREATE TABLE AI_MODEL_PERFORMANCE (
    PERFORMANCE_ID  NUMBER          PRIMARY KEY,
    MODEL_NAME      VARCHAR2(100)   NOT NULL,
    MODEL_VERSION   VARCHAR2(20)    NOT NULL,
    METRIC_NAME     VARCHAR2(50)    NOT NULL, -- ACCURACY, PRECISION, RECALL, F1_SCORE 등
    METRIC_VALUE    NUMBER(10,6),
    TEST_DATA_SIZE  NUMBER,
    EVALUATION_DATE TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    NOTES           VARCHAR2(500)
);

-- 실시간 추천 캐시 테이블 (성능 최적화용)
CREATE TABLE AI_RECOMMENDATION_CACHE (
    CACHE_ID        NUMBER          PRIMARY KEY,
    CACHE_KEY       VARCHAR2(200)   UNIQUE NOT NULL, -- 고객ID_매장ID_타입 등의 조합
    RECOMMENDATIONS CLOB,           -- JSON 형태의 추천 목록
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    EXPIRES_AT      TIMESTAMP       NOT NULL,
    HIT_COUNT       NUMBER          DEFAULT 0
);

-- ============================================================================
-- 시퀀스 생성
-- ============================================================================

-- Auth 서비스 시퀀스
CREATE SEQUENCE SEQ_AUTH_USERS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_ROLES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_PERMISSIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_TOKENS START WITH 1 INCREMENT BY 1;

-- POS 서비스 시퀀스
CREATE SEQUENCE SEQ_POS_OWNERS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_STORES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_CATEGORIES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_OPTION_GROUPS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_OPTION_ITEMS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_PRODUCTS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_PRODUCT_OPTIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_INVENTORY START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_SALES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_SALE_ITEMS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_SALE_ITEM_OPTIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_PAYMENTS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_POS_INVENTORY_MOVEMENTS START WITH 1 INCREMENT BY 1;

-- AI 서비스 시퀀스
CREATE SEQUENCE SEQ_AI_CUSTOMER_BEHAVIOR START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_RECOMMENDATIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_SALES_PREDICTIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_CUSTOMER_SEGMENTS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_CUSTOMER_SEGMENT_MAPPING START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_PRODUCT_ASSOCIATIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_MODEL_PERFORMANCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AI_RECOMMENDATION_CACHE START WITH 1 INCREMENT BY 1;

-- ============================================================================
-- 인덱스 생성
-- ============================================================================

-- Auth 서비스 인덱스
CREATE INDEX IDX_AUTH_USERS_EMAIL ON AUTH_USERS(EMAIL);
CREATE INDEX IDX_AUTH_USERS_USERNAME ON AUTH_USERS(USERNAME);
CREATE INDEX IDX_AUTH_TOKENS_USER_ID ON AUTH_TOKENS(USER_ID);
CREATE INDEX IDX_AUTH_TOKENS_EXPIRES ON AUTH_TOKENS(EXPIRES_AT);

-- POS 서비스 인덱스
CREATE INDEX IDX_POS_PRODUCTS_CODE ON POS_PRODUCTS(PRODUCT_CODE);
CREATE INDEX IDX_POS_PRODUCTS_BARCODE ON POS_PRODUCTS(BARCODE);
CREATE INDEX IDX_POS_SALES_DATE ON POS_SALES(SALE_DATE);
CREATE INDEX IDX_POS_SALES_STORE ON POS_SALES(STORE_ID, SALE_DATE);
CREATE INDEX IDX_POS_INVENTORY_STORE_PRODUCT ON POS_INVENTORY(STORE_ID, PRODUCT_ID);

-- AI 서비스 인덱스
CREATE INDEX IDX_AI_BEHAVIOR_STORE_TIME ON AI_CUSTOMER_BEHAVIOR(STORE_ID, VISIT_TIME);
CREATE INDEX IDX_AI_RECOMMENDATIONS_STORE_PRODUCT ON AI_RECOMMENDATIONS(STORE_ID, PRODUCT_ID);
CREATE INDEX IDX_AI_PREDICTIONS_DATE ON AI_SALES_PREDICTIONS(PREDICTION_DATE);
CREATE INDEX IDX_AI_CACHE_EXPIRES ON AI_RECOMMENDATION_CACHE(EXPIRES_AT);

-- ============================================================================
-- 기본 데이터 삽입
-- ============================================================================

-- Auth 서비스 기본 데이터
INSERT INTO AUTH_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES (SEQ_AUTH_ROLES.NEXTVAL, 'ADMIN', '시스템 관리자');
INSERT INTO AUTH_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES (SEQ_AUTH_ROLES.NEXTVAL, 'MANAGER', '매장 관리자');
INSERT INTO AUTH_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES (SEQ_AUTH_ROLES.NEXTVAL, 'CASHIER', '계산원');
INSERT INTO AUTH_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES (SEQ_AUTH_ROLES.NEXTVAL, 'USER', '일반 사용자');

INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'USER_READ', 'USER', 'READ', '사용자 조회');
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'USER_WRITE', 'USER', 'WRITE', '사용자 생성/수정');
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'PRODUCT_READ', 'PRODUCT', 'READ', '상품 조회');
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'PRODUCT_WRITE', 'PRODUCT', 'WRITE', '상품 생성/수정');
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'SALES_READ', 'SALES', 'READ', '판매 조회');
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE_TYPE, ACTION_TYPE, DESCRIPTION) VALUES (SEQ_AUTH_PERMISSIONS.NEXTVAL, 'SALES_WRITE', 'SALES', 'WRITE', '판매 처리');

-- POS 서비스 기본 데이터
INSERT INTO POS_OWNERS (OWNER_ID, EMAIL, PASSWORD_HASH, OWNER_NAME, PHONE) VALUES (SEQ_POS_OWNERS.NEXTVAL, 'owner@placely.com', '$2a$10$example', '김사장', '010-1234-5678');

INSERT INTO POS_STORES (STORE_ID, OWNER_ID, STORE_NAME, STORE_CODE, ADDRESS, PHONE, OPEN_TIME, CLOSE_TIME) VALUES (SEQ_POS_STORES.NEXTVAL, (SELECT OWNER_ID FROM POS_OWNERS WHERE EMAIL = 'owner@placely.com'), '본점', 'MAIN001', '서울시 강남구 테헤란로 123', '02-1234-5678', '09:00', '22:00');

INSERT INTO POS_CATEGORIES (CATEGORY_ID, CATEGORY_NAME, DISPLAY_ORDER) VALUES (SEQ_POS_CATEGORIES.NEXTVAL, '음료', 1);
INSERT INTO POS_CATEGORIES (CATEGORY_ID, CATEGORY_NAME, DISPLAY_ORDER) VALUES (SEQ_POS_CATEGORIES.NEXTVAL, '디저트', 2);
INSERT INTO POS_CATEGORIES (CATEGORY_ID, CATEGORY_NAME, DISPLAY_ORDER) VALUES (SEQ_POS_CATEGORIES.NEXTVAL, '간식', 3);

INSERT INTO POS_OPTION_GROUPS (OPTION_GROUP_ID, GROUP_NAME, DESCRIPTION) VALUES (SEQ_POS_OPTION_GROUPS.NEXTVAL, '사이즈', '음료 사이즈 선택');
INSERT INTO POS_OPTION_GROUPS (OPTION_GROUP_ID, GROUP_NAME, DESCRIPTION) VALUES (SEQ_POS_OPTION_GROUPS.NEXTVAL, '온도', '음료 온도 선택');
INSERT INTO POS_OPTION_GROUPS (OPTION_GROUP_ID, GROUP_NAME, DESCRIPTION) VALUES (SEQ_POS_OPTION_GROUPS.NEXTVAL, '시럽', '추가 시럽 선택');

INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '사이즈'), 'S');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '사이즈'), 'M');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '사이즈'), 'L');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '온도'), '아이스');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '온도'), '핫');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '시럽'), '바닐라시럽');
INSERT INTO POS_OPTION_ITEMS (OPTION_ITEM_ID, OPTION_GROUP_ID, ITEM_NAME) VALUES (SEQ_POS_OPTION_ITEMS.NEXTVAL, (SELECT OPTION_GROUP_ID FROM POS_OPTION_GROUPS WHERE GROUP_NAME = '시럽'), '카라멜시럽');

-- AI 서비스 기본 데이터
INSERT INTO AI_CUSTOMER_SEGMENTS (SEGMENT_ID, SEGMENT_NAME, DESCRIPTION, CRITERIA) VALUES (SEQ_AI_CUSTOMER_SEGMENTS.NEXTVAL, 'VIP 고객', '월 구매액 50만원 이상', '{"monthly_amount": {"min": 500000}}');
INSERT INTO AI_CUSTOMER_SEGMENTS (SEGMENT_ID, SEGMENT_NAME, DESCRIPTION, CRITERIA) VALUES (SEQ_AI_CUSTOMER_SEGMENTS.NEXTVAL, '단골 고객', '월 3회 이상 방문', '{"monthly_visits": {"min": 3}}');
INSERT INTO AI_CUSTOMER_SEGMENTS (SEGMENT_ID, SEGMENT_NAME, DESCRIPTION, CRITERIA) VALUES (SEQ_AI_CUSTOMER_SEGMENTS.NEXTVAL, '신규 고객', '첫 방문 후 1개월 이내', '{"days_since_first_visit": {"max": 30}}');
INSERT INTO AI_CUSTOMER_SEGMENTS (SEGMENT_ID, SEGMENT_NAME, DESCRIPTION, CRITERIA) VALUES (SEQ_AI_CUSTOMER_SEGMENTS.NEXTVAL, '이탈 위험 고객', '최근 30일간 방문 없음', '{"days_since_last_visit": {"min": 30}}');

COMMIT;

-- ============================================================================
-- 생성 완료 확인
-- ============================================================================

SELECT 'Placely 데이터베이스 테이블 생성이 완료되었습니다!' AS MESSAGE FROM DUAL;

-- 생성된 테이블 확인
SELECT 'Auth 서비스 테이블' AS SERVICE, COUNT(*) AS TABLE_COUNT 
FROM USER_TABLES WHERE TABLE_NAME LIKE 'AUTH_%'
UNION ALL
SELECT 'POS 서비스 테이블' AS SERVICE, COUNT(*) AS TABLE_COUNT 
FROM USER_TABLES WHERE TABLE_NAME LIKE 'POS_%'
UNION ALL
SELECT 'AI 서비스 테이블' AS SERVICE, COUNT(*) AS TABLE_COUNT 
FROM USER_TABLES WHERE TABLE_NAME LIKE 'AI_%';

-- 시퀀스 확인
SELECT COUNT(*) AS SEQUENCE_COUNT 
FROM USER_SEQUENCES 
WHERE SEQUENCE_NAME LIKE 'SEQ_%';

-- 인덱스 확인
SELECT COUNT(*) AS INDEX_COUNT 
FROM USER_INDEXES 
WHERE INDEX_NAME LIKE 'IDX_%'; 