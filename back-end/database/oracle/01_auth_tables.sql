-- ============================================================================
-- Auth 서비스 테이블 (인증/인가 관리)
-- ============================================================================

-- 사용자 테이블
CREATE TABLE AUTH_USERS (
    USER_ID         NUMBER          PRIMARY KEY,
    USERNAME        VARCHAR2(50)    UNIQUE NOT NULL,
    EMAIL           VARCHAR2(100)   UNIQUE NOT NULL,
    PASSWORD_HASH   VARCHAR2(255)   NOT NULL,
    PHONE           VARCHAR2(20),
    FULL_NAME       VARCHAR2(100)   NOT NULL,
    BIRTH_DATE      DATE,
    GENDER          CHAR(1)         CHECK (GENDER IN ('M', 'F')),
    STATUS          VARCHAR2(20)    DEFAULT 'ACTIVE' CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'SUSPENDED')),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    LAST_LOGIN_AT   TIMESTAMP
);

-- 역할 테이블
CREATE TABLE AUTH_ROLES (
    ROLE_ID         NUMBER          PRIMARY KEY,
    ROLE_NAME       VARCHAR2(50)    UNIQUE NOT NULL,
    DESCRIPTION     VARCHAR2(200),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 사용자-역할 매핑 테이블
CREATE TABLE AUTH_USER_ROLES (
    USER_ID         NUMBER          NOT NULL,
    ROLE_ID         NUMBER          NOT NULL,
    GRANTED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    GRANTED_BY      NUMBER,
    PRIMARY KEY (USER_ID, ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES AUTH_USERS(USER_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES AUTH_ROLES(ROLE_ID),
    FOREIGN KEY (GRANTED_BY) REFERENCES AUTH_USERS(USER_ID)
);

-- 권한 테이블
CREATE TABLE AUTH_PERMISSIONS (
    PERMISSION_ID   NUMBER          PRIMARY KEY,
    PERMISSION_NAME VARCHAR2(100)   UNIQUE NOT NULL,
    RESOURCE        VARCHAR2(100)   NOT NULL,
    ACTION          VARCHAR2(50)    NOT NULL,
    DESCRIPTION     VARCHAR2(200),
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
);

-- 역할-권한 매핑 테이블
CREATE TABLE AUTH_ROLE_PERMISSIONS (
    ROLE_ID         NUMBER          NOT NULL,
    PERMISSION_ID   NUMBER          NOT NULL,
    GRANTED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ROLE_ID, PERMISSION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES AUTH_ROLES(ROLE_ID),
    FOREIGN KEY (PERMISSION_ID) REFERENCES AUTH_PERMISSIONS(PERMISSION_ID)
);

-- 로그인 토큰 테이블 (JWT 토큰 관리)
CREATE TABLE AUTH_TOKENS (
    TOKEN_ID        NUMBER          PRIMARY KEY,
    USER_ID         NUMBER          NOT NULL,
    TOKEN_TYPE      VARCHAR2(20)    DEFAULT 'ACCESS' CHECK (TOKEN_TYPE IN ('ACCESS', 'REFRESH')),
    TOKEN_HASH      VARCHAR2(255)   NOT NULL,
    EXPIRES_AT      TIMESTAMP       NOT NULL,
    CREATED_AT      TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    REVOKED_AT      TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES AUTH_USERS(USER_ID)
);

-- 시퀀스 생성
CREATE SEQUENCE SEQ_AUTH_USERS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_ROLES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_PERMISSIONS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_AUTH_TOKENS START WITH 1 INCREMENT BY 1;

-- 인덱스 생성
CREATE INDEX IDX_AUTH_USERS_EMAIL ON AUTH_USERS(EMAIL);
CREATE INDEX IDX_AUTH_USERS_USERNAME ON AUTH_USERS(USERNAME);
CREATE INDEX IDX_AUTH_TOKENS_USER_ID ON AUTH_TOKENS(USER_ID);
CREATE INDEX IDX_AUTH_TOKENS_EXPIRES ON AUTH_TOKENS(EXPIRES_AT);

-- 기본 데이터 삽입
INSERT INTO AUTH_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES 
(SEQ_AUTH_ROLES.NEXTVAL, 'ADMIN', '시스템 관리자'),
(SEQ_AUTH_ROLES.NEXTVAL, 'MANAGER', '매장 관리자'),
(SEQ_AUTH_ROLES.NEXTVAL, 'CASHIER', '계산원'),
(SEQ_AUTH_ROLES.NEXTVAL, 'USER', '일반 사용자');

-- 권한 데이터 삽입
INSERT INTO AUTH_PERMISSIONS (PERMISSION_ID, PERMISSION_NAME, RESOURCE, ACTION, DESCRIPTION) VALUES 
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'USER_READ', 'USER', 'READ', '사용자 조회'),
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'USER_WRITE', 'USER', 'WRITE', '사용자 생성/수정'),
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'PRODUCT_READ', 'PRODUCT', 'READ', '상품 조회'),
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'PRODUCT_WRITE', 'PRODUCT', 'WRITE', '상품 생성/수정'),
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'SALES_READ', 'SALES', 'READ', '판매 조회'),
(SEQ_AUTH_PERMISSIONS.NEXTVAL, 'SALES_WRITE', 'SALES', 'WRITE', '판매 처리');

COMMIT; 