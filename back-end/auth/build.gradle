// Auth 모듈 - 인증/인가 담당
dependencies {
	// 공통 모듈
	implementation project(':common')
	
	// Spring Boot 핵심
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	// 데이터베이스
	implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
	implementation 'com.oracle.database.jdbc:ucp:23.3.0.23.09'
	
	// Redis (토큰 관리용)
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Google Simple JSON
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// jpa QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0' // 버전 확인 필요
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa' // QueryDSL APT가 동작해 JPA용 Q클래스를 생성함.

	// API 문서화 - springdoc-openapi
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	
	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	
	// Kotlin 테스트 라이브러리
	testImplementation 'io.kotest:kotest-runner-junit5:5.8.0'
	testImplementation 'io.kotest:kotest-assertions-core:5.8.0'
	testImplementation 'io.kotest.extensions:kotest-extensions-spring:1.1.2'
	testImplementation 'io.mockk:mockk:1.13.8'
	testImplementation 'com.ninja-squad:springmockk:4.0.2'
}

def generatedSourcesDir = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile

sourceSets {
	main {
		java {
			srcDirs += [generatedSourcesDir]
		}
	}
}